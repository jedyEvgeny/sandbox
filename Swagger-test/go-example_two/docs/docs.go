// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "json text/plain"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Евгений",
            "url": "https://github.com/jedyEvgeny",
            "email": "KEF1991@yandex.ru"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/home/create_item": {
            "post": {
                "description": "Создает новый товар с указанным именем и ценой.\nНаименование и цена передаются в теле в json-объекте.\nЕсли товар не удается создать, возвращает ошибку.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Создать новый товар",
                "parameters": [
                    {
                        "description": "Создаем новый товар",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Item"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Товар успешно создан",
                        "schema": {
                            "$ref": "#/definitions/handlers.Resourse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации данных"
                    },
                    "405": {
                        "description": "Метод не разрешен"
                    },
                    "500": {
                        "description": "Ошибка сервера"
                    }
                }
            }
        },
        "/home/create_item/{id}": {
            "put": {
                "description": "Обновляет наименование и стоимость товара.\nТекущее наименование товара передаётся как часть эндпоинта.\nНовое наименование товара и стоимость передаётся в теле запроса json-объектом.\nЕсли товар не удается обновить, возвращает ошибку.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Обновляем товар",
                "parameters": [
                    {
                        "description": "Создаем новый товар",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Item"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Обновляем существующий товар",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Наименование и цена товара обновлены"
                    },
                    "400": {
                        "description": "Ошибка валидации данных"
                    },
                    "405": {
                        "description": "Метод не разрешен"
                    },
                    "500": {
                        "description": "Ошибка сервера"
                    }
                }
            },
            "patch": {
                "description": "Обновляет стоимость товара.\nНаименование товара передаётся как часть эндпоинта.\nСтоимость передаётся в теле в json-объекта.\nЕсли товар не удается обновить, возвращает ошибку.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Обновляем стоимость товара",
                "parameters": [
                    {
                        "description": "Создаем новый товар",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ItemPrice"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Обновляем существующий товар",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Цена обновлена"
                    },
                    "400": {
                        "description": "Ошибка валидации данных"
                    },
                    "405": {
                        "description": "Метод не разрешен"
                    },
                    "500": {
                        "description": "Ошибка сервера"
                    }
                }
            }
        },
        "/home/delete_item/{id}": {
            "delete": {
                "description": "Удаляет товар по наименованию\nНаименование товара передаётся в эндпоинте\nЕсли товар не удается удалить, возвращает ошибку.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Удалить товар",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Удаляем товар",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Товар успешно удалён"
                    },
                    "404": {
                        "description": "Нечего удалять: товар не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Метод не разрешен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/home/item/{id}": {
            "get": {
                "description": "Получает наименование и цену товара.\nНаименование товара передаётся как часть эндпоинта.\nЕсли товар не удается найти, возвращает ошибку.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Получаем информацию о товаре",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Обновляем существующий товар",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о товаре получена",
                        "schema": {
                            "$ref": "#/definitions/handlers.Item"
                        }
                    },
                    "404": {
                        "description": "Товар не найден"
                    },
                    "405": {
                        "description": "Метод не разрешен"
                    },
                    "500": {
                        "description": "Ошибка сервера"
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.Item": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "example": 264.5
                },
                "product": {
                    "type": "string",
                    "example": "Ананас"
                }
            }
        },
        "handlers.ItemPrice": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "string",
                    "example": "264.50"
                }
            }
        },
        "handlers.Resourse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "Ананас.txt"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Операции с товарами",
            "name": "items",
            "externalDocs": {
                "description": "Консультация по работе с товарами",
                "url": "https://t.me/EvKly"
            }
        }
    ],
    "externalDocs": {
        "description": "Резерв для дополнительного описания API",
        "url": "https://t.me/+ZGac_D1V4wFjYzRi"
    },
    "x-name": {
        "environment": "production",
        "team": "backend",
        "version": "1.0.0"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/home",
	Schemes:          []string{"http", "https"},
	Title:            "Я, Golang-инженер",
	Description:      "Тестируем бэкенд с фронтендом по CRUD-запросам",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
